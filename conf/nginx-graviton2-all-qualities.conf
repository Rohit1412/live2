worker_processes  4;  # Match c6g.xlarge vCPUs
worker_cpu_affinity 0001 0010 0100 1000;  # Pin workers to specific Graviton2 cores
error_log /var/log/nginx/error.log warn;
worker_rlimit_nofile 65535;

events {
    worker_connections  2048;  # Higher for Graviton2
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# RTMP configuration optimized for Graviton2 with ALL 6 quality levels
rtmp {
    server {
        listen 1935;
        chunk_size 8192;  # Larger chunks for better ARM64 performance
        max_streams 32;
        
        # Input application
        application live {
            live on;
            
            # ALL 6 QUALITY LEVELS - Optimized for Graviton2
            # Using ultrafast preset and ARM64-optimized settings
            exec_push  /usr/local/bin/ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1
                # 360p - Low quality
                -c:v libx264 -c:a aac -b:v 400k -b:a 64k -vf "scale=640:360" -preset ultrafast -tune zerolatency -crf 28 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_low
                # 480p - Medium-low quality  
                -c:v libx264 -c:a aac -b:v 800k -b:a 96k -vf "scale=854:480" -preset ultrafast -tune zerolatency -crf 26 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_mid
                # 720p - Medium quality
                -c:v libx264 -c:a aac -b:v 1500k -b:a 128k -vf "scale=1280:720" -preset ultrafast -tune zerolatency -crf 24 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_high
                # 1080p - High quality  
                -c:v libx264 -c:a aac -b:v 3000k -b:a 128k -vf "scale=1920:1080" -preset ultrafast -tune zerolatency -crf 22 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_hd1080
                # 1440p - Very high quality
                -c:v libx264 -c:a aac -b:v 6000k -b:a 192k -vf "scale=2560:1440" -preset ultrafast -tune zerolatency -crf 20 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_hd1440
                # 4K - Ultra quality (this will be heavy!)
                -c:v libx264 -c:a aac -b:v 12000k -b:a 256k -vf "scale=3840:2160" -preset ultrafast -tune zerolatency -crf 18 -g 60 -keyint_min 60 -sc_threshold 0 -threads 1 -f flv rtmp://localhost:1935/show/$name_hd2160;
        }
        
        # Output application
        application show {
            live on;
            deny play all;
            
            # HLS settings optimized for Graviton2
            hls on;
            hls_fragment 3;  # 3 seconds for better performance with 6 qualities
            hls_playlist_length 15;  # Longer playlist for stability
            hls_path /mnt/hls/;
            hls_cleanup on;
            hls_sync 100ms;
            hls_continuous on;
            
            # All 6 quality variants
            hls_variant _low BANDWIDTH=500000 RESOLUTION=640x360;
            hls_variant _mid BANDWIDTH=900000 RESOLUTION=854x480;
            hls_variant _high BANDWIDTH=1800000 RESOLUTION=1280x720;
            hls_variant _hd1080 BANDWIDTH=3500000 RESOLUTION=1920x1080;
            hls_variant _hd1440 BANDWIDTH=7000000 RESOLUTION=2560x1440;
            hls_variant _hd2160 BANDWIDTH=15000000 RESOLUTION=3840x2160;
            
            # DASH settings
            dash on;
            dash_path /mnt/dash/;
            dash_fragment 3;
            dash_playlist_length 15;
            dash_cleanup on;
        }
    }
}

http {
    # Graviton2 optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    
    # Memory optimizations for 8GB RAM
    client_body_buffer_size 256k;
    client_max_body_size 50m;
    client_header_buffer_size 2k;
    large_client_header_buffers 8 8k;
    output_buffers 2 64k;
    postpone_output 1460;
    
    # Gzip optimized for ARM64
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;  # Good balance for ARM64
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.apple.mpegurl video/mp2t;
    
    # Rate limiting to prevent overload
    limit_req_zone $binary_remote_addr zone=hls:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=dash:10m rate=30r/s;
    
    server {
        listen 8080;
        server_name _;
        
        # Serve HLS fragments
        location /hls {
            limit_req zone=hls burst=60 nodelay;
            
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /mnt;
            
            # Optimized caching for live streams
            add_header Cache-Control "max-age=3, stale-while-revalidate=60";
            
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            add_header 'Access-Control-Allow-Headers' 'Range';
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Serve DASH fragments
        location /dash {
            limit_req zone=dash burst=60 nodelay;
            
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }
            root /mnt;
            add_header Cache-Control "max-age=3, stale-while-revalidate=60";
            
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            add_header 'Access-Control-Allow-Headers' 'Range';
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Statistics endpoint
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            
        }
        
        location /stat.xsl {
            root /etc/nginx/html;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
